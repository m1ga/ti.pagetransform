/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 */
package ti.pagetransform;

import android.app.Activity;
import android.os.Build;
import android.view.View;
import android.widget.FrameLayout;

import androidx.annotation.RequiresApi;
import androidx.viewpager.widget.ViewPager;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiUIView;

@Kroll.proxy(creatableInModule = TiPagetransformModule.class)
public class StackProxy extends TiViewProxy {
    ViewPager mPager;

    // Constructor
    public StackProxy() {
        super();
    }

    @Override
    public TiUIView createView(Activity activity) {
        return null;
    }

    // Handle creation options
    @Override
    public void handleCreationDict(KrollDict options) {
        super.handleCreationDict(options);

        if (options.containsKey("scrollableView")) {
            ScrollableViewProxy svp = (ScrollableViewProxy) options.get("scrollableView");
            FrameLayout fl = (FrameLayout) svp.getOrCreateView().getNativeView();

            mPager = (ViewPager) fl.getChildAt(0);
            mPager.setClipChildren(false);
            mPager.setClipToPadding(false);
            mPager.setPageTransformer(true, new DepthPageTransformer());
        }
    }

    public class DepthPageTransformer implements ViewPager.PageTransformer {
        private static final float MIN_SCALE = 0.75f;

        @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
        public void transformPage(View view, float position) {
            int pageWidth = view.getWidth();
            int pageHeight = view.getHeight();

            if (position < 0) {
                // old pages
                view.setAlpha(1f + position * 0.2f);
                view.setTranslationX(pageWidth * -position);
                view.setTranslationY(25f * position);
                view.setScaleX(0.9f + position * 0.01f);
                view.setScaleY(0.9f + position * 0.01f);
                view.setTranslationZ(0.9f * position);

            } else if (position == 0) {
                // visible page
                view.setTranslationX(pageWidth * -position);
                view.setTranslationY(20f * position);
                view.setScaleX(0.9f);
                view.setScaleY(0.9f);
                view.setTranslationZ(0.9f * position);

            } else if (position <= 1) {
                // next page
                view.setScaleX(0.9f + (0.02f * position));
                view.setScaleY(0.9f + (0.02f * position));
                view.setTranslationX(pageWidth * -position);
                view.setTranslationY(pageHeight * position - 150f * position );
                view.setTranslationZ(2f);
            } else {
                // all other pages
                view.setScaleX(0.92f);
                view.setScaleY(0.92f);
                view.setTranslationX(pageWidth * -position);
                view.setTranslationZ(2f);

                // keep at stack level
                view.setTranslationY(pageHeight * 1f - 150f * 1f );

            }
        }
    }

}
